type EnvironmentCreationInput = record { env_name : text };
type EnvironmentCreationResult = record { env_uid : text; env_name : text };
type HttpRequest = record {
  url : text;
  method : text;
  body : opt vec nat8;
  headers : vec record { text; text };
  upgrade : opt bool;
};
type HttpResponse = record {
  body : vec nat8;
  headers : vec record { text; text };
  upgrade : opt bool;
  streaming_strategy : opt text;
  status_code : nat16;
};
type Result = variant { Ok : EnvironmentCreationResult; Err };
type Result_1 = variant { Ok : VirtualPersonaValue; Err : text };
type VirtualPersonaValue = record {
  manager_env_uid : opt text;
  user_env_uid : opt text;
  virtual_persona_principal_id : text;
  virtual_persona_ip : text;
};
service : (opt text, text) -> {
  createEnvironment : (EnvironmentCreationInput) -> (Result);
  getProfile : (text) -> (Result_1);
  http_request : (HttpRequest) -> (HttpResponse) query;
  http_request_update : (HttpRequest) -> (HttpResponse);
}
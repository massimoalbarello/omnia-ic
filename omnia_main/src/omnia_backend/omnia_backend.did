type DeviceInfo = record {
  device_name : text;
  device_uid : text;
  gateway_uid : text;
};
type DeviceRegistrationInput = record {
  device_name : text;
  env_uid : text;
  gateway_uid : text;
};
type EnvironmentCreationInput = record { env_name : text };
type EnvironmentCreationResult = record { env_uid : text; env_name : text };
type EnvironmentInfo = record {
  env_manager_principal_id : text;
  env_uid : text;
  env_name : text;
};
type GatewayInfo = record { gateway_name : text; gateway_uid : text };
type GatewayRegistrationInput = record {
  gateway_name : text;
  env_uid : text;
  gateway_uid : text;
};
type HttpRequest = record {
  url : text;
  method : text;
  body : opt vec nat8;
  headers : vec record { text; text };
  upgrade : opt bool;
};
type HttpResponse = record {
  body : vec nat8;
  headers : vec record { text; text };
  upgrade : opt bool;
  streaming_strategy : opt text;
  status_code : nat16;
};
type Result = variant { Ok : EnvironmentCreationResult; Err };
type Result_1 = variant { Ok : vec DeviceInfo; Err : text };
type Result_2 = variant { Ok : vec GatewayInfo; Err : text };
type Result_3 = variant { Ok : VirtualPersona; Err };
type Result_4 = variant { Ok : text; Err };
type Result_5 = variant { Ok : DeviceInfo; Err : text };
type Result_6 = variant { Ok : opt GatewayInfo; Err : text };
type Result_7 = variant { Ok : EnvironmentInfo; Err : text };
type VirtualPersona = record {
  manager_env_uid : opt text;
  user_env_uid : opt text;
  virtual_persona_principal_id : text;
  virtual_persona_ip : text;
};
service : (opt text, text) -> {
  createEnvironment : (EnvironmentCreationInput) -> (Result);
  getDevices : (text) -> (Result_1);
  getGateways : (text) -> (Result_2);
  getProfile : (text) -> (Result_3);
  http_request : (HttpRequest) -> (HttpResponse) query;
  http_request_update : (HttpRequest) -> (HttpResponse);
  initGateway : (text) -> (Result_4);
  registerDevice : (DeviceRegistrationInput) -> (Result_5);
  registerGateway : (text, GatewayRegistrationInput) -> (Result_6);
  resetEnvironment : () -> (Result_7);
  setEnvironment : (text) -> (Result_7);
}
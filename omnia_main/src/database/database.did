type DeviceInfo = record {
  device_name : text;
  device_uid : text;
  gateway_uid : text;
};
type DeviceRegistrationInput = record {
  device_name : text;
  env_uid : text;
  gateway_uid : text;
};
type EnvironmentCreationInput = record { env_name : text };
type EnvironmentCreationResult = record { env_uid : text; env_name : text };
type EnvironmentInfo = record {
  env_manager_principal_id : text;
  env_uid : text;
  env_name : text;
};
type GatewayInfo = record { gateway_name : text; gateway_uid : text };
type GatewayRegistrationInput = record {
  gateway_name : text;
  env_uid : text;
  gateway_uid : text;
};
type StoredUserProfile = record {
  user_principal_id : text;
  environment_uid : opt text;
};
service : {
  createNewEnvironment : (text, EnvironmentCreationInput) -> (
      EnvironmentCreationResult,
    );
  getDevicesInEnvironment : (text) -> (vec DeviceInfo);
  getGatewaysInEnvironment : (text) -> (vec GatewayInfo);
  getUserProfile : (text) -> (StoredUserProfile);
  registerDeviceInEnvironment : (text, DeviceRegistrationInput) -> (DeviceInfo);
  registerGatewayInEnvironment : (text, GatewayRegistrationInput) -> (
      GatewayInfo,
    );
  resetUserFromEnvironment : (text) -> (EnvironmentInfo);
  setUserInEnvironment : (text, text) -> (EnvironmentInfo);
}
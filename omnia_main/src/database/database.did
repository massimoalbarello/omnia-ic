type EnvironmentCreationInput = record { env_name : text };
type EnvironmentCreationResult = record { env_uid : text; env_name : text };
type EnvironmentInfo = record { env_uid : text };
type GatewayRegistrationInput = record { gateway_name : text; env_uid : text };
type InitializedGatewayValue = record { principal_id : text };
type IpChallengeValue = record { requester_ip : text; timestamp : nat64 };
type PairingInfo = record { payload : text };
type RegisteredGatewayValue = record {
  gateway_name : text;
  gateway_ip : text;
  env_uid : text;
};
type Result = variant { Ok : EnvironmentCreationResult; Err : text };
type Result_1 = variant { Ok : vec InitializedGatewayValue; Err : text };
type Result_2 = variant { Ok : vec RegisteredGatewayValue; Err : text };
type Result_3 = variant { Ok : VirtualPersonaValue; Err : text };
type Result_4 = variant { Ok : text; Err : text };
type Result_5 = variant { Ok : UpdateValue; Err : text };
type Result_6 = variant { Ok : RegisteredGatewayValue; Err : text };
type Result_7 = variant { Ok : EnvironmentInfo; Err : text };
type UpdateValue = record {
  info : PairingInfo;
  command : text;
  virtual_persona_principal_id : text;
  virtual_persona_ip : text;
};
type VirtualPersonaValue = record {
  manager_env_uid : opt text;
  user_env_uid : opt text;
  virtual_persona_principal_id : text;
  virtual_persona_ip : text;
};
service : {
  checkIfVirtualPersonaExists : (text) -> (bool) query;
  createNewEnvironment : (text, EnvironmentCreationInput) -> (Result);
  getGatewayUpdatesByPrincipal : (text) -> (opt UpdateValue);
  getInitializedGatewaysByIp : (text) -> (Result_1);
  getRegisteredGatewaysInEnvironment : (text) -> (Result_2);
  getVirtualPersona : (text, text) -> (Result_3);
  initGatewayByIp : (text, text) -> (Result_4);
  initNonceToIp : (text, IpChallengeValue) -> ();
  isGatewayRegistered : (text) -> (bool);
  pairNewDeviceOnGateway : (text, text, text) -> (Result_5);
  registerGatewayInEnvironment : (text, text, GatewayRegistrationInput) -> (
      Result_6,
    );
  resetUserFromEnvironment : (text, text) -> (Result_7);
  setUserInEnvironment : (text, text) -> (Result_7);
}